language: go

# Only the last two Go releases are supported by the Go team with security
# updates. Any versions older than that should be considered deprecated.
# Don't bother testing with them. tip builds your code with the latest
# development version of Go. This can warn you that your code will break
# in the next version of Go. Don't worry! Later we declare that test runs
# are allowed to fail on Go tip.
go:
  - 1.12.x
  - master

# Setting this to true will skip the `go get` dependencies step.
install: true

matrix:
  allow_failures:
    - go: master                # It's ok if our code fails on unstable development versions of Go.
  # Don't wait for tip tests to finish. Mark the test run green if the
  # tests pass on the stable versions of Go.
  fast_finish: true

# Anything in before_script that returns a nonzero exit code will
# flunk the build and immediately stop. It's sorta like having
# set -e enabled in bash.
before_script:
  - GO_FILES=$(find . -iname '*.go' -type f | grep -v /vendor/)                  # All the .go files, excluding vendor/
  - go get golang.org/x/lint/golint                                              # Linter
  - go get honnef.co/go/tools/cmd/staticcheck                                    # Badass static analyzer/linter
  - go get github.com/fzipp/gocyclo                                              # Cyclomatic complexity
  - go get github.com/3rf/codecoroner                                            # Dead code analysis
  - go get github.com/dustin/go-humanize                                         # Dependency used in pixy files only
  - npm install -g typescript                                                    # TypeScript
  - git clone --depth=1 https://github.com/animenotifier/database ~/.aero/db/arn # Database

# script always run to completion (set +e). All of these code checks are must haves
# in a modern Go project.
script:
  - make deps                                     # Get dependencies. Allow this to fail because components cannot be found.
  - make all                                      # Build
# - test -z $(gofmt -s -l $GO_FILES)              # Fail if a .go file hasn't been formatted with gofmt
  - go test -v .                                  # Run all the tests
# - go test -v -race ./...                        # Run all the tests with the race detector enabled
  - go vet ./...                                  # go vet is the official Go static analyzer
  - staticcheck -checks all,-ST1000,-ST1005 ./... # static analysis
  - gocyclo -over 19 $GO_FILES                    # forbid code with huge functions
  - golint -set_exit_status $(go list ./...)      # one last linter
  - codecoroner -ignore components funcs ./...    # dead code analysis

after_success:
  - bash <(curl -s https://codecov.io/bash)