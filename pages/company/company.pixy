component CompanyPage(company *arn.Company, studioAnime, producedAnime, licensedAnime []*arn.Anime, user *arn.User)
	CompanyTabs(company, user)
	
	.company-page
		.company-header
			h1.company-name.mountable= company.Name.English

			.company-description.mountable
				div!= markdown.Render(company.Description)

			CompanyAnime("Animated:", studioAnime, user)
			CompanyAnime("Produced:", producedAnime, user)
			CompanyAnime("Licensed:", licensedAnime, user)
		
		.company-sidebar
			if company.Location.Latitude != 0 && company.Location.Longitude != 0
				h3.mountable Location
				iframe.company-location.mountable(src="https://www.google.com/maps/embed/v1/place?q=" + toString(company.Location.Latitude) + "," + toString(company.Location.Longitude) + "&key=AIzaSyAsx6fhqRGaMLTixIJMIZBU4Mg6HJmvQf0")

			if len(company.Links) > 0
				h3.mountable Links
				ul.mountable
					each link in company.Links
						li
							a(href=link.URL, target="_blank", rel="noopener")= link.Title
			
			//- if len(company.Name.Synonyms) > 0
			//- 	h3 Synonyms
			//- 	ul
			//- 		each synonym in company.Name.Synonyms
			//- 			li= synonym
			
			//- if len(company.Tags) > 0
			//- 	h3 Tags
			//- 	ul
			//- 		each tag in company.Tags
			//- 			li= tag

component CompanyAnime(label string, animes []*arn.Anime, user *arn.User)
	if len(animes) > 0
		h3.mountable= label
		
		.company-anime.mountable
			each anime in animes
				a.company-anime-item.ajax(href=anime.Link(), title=anime.Title.ByUser(user))
					img.company-anime-item-image.lazy(data-src=anime.ImageLink("small"), data-webp="true", data-color=anime.AverageColor(), alt=anime.Title.ByUser(user))

component CompanyTabs(company *arn.Company, user *arn.User)
	.tabs
		Tab("Company", "building", company.Link())
		if user != nil
			Tab("Edit", "pencil", company.Link() + "/edit")
		Tab("History", "history", company.Link() + "/history")