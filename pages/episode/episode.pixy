component AnimeEpisode(anime *arn.Anime, episode *arn.AnimeEpisode, user *arn.User, episodeIndex int)
	h1
		a(href=anime.Link())= anime.Title.ByUser(user)

	.episode-view-image-container
		a(href=anime.Link(), title=anime.Title.ByUser(user))
			img.anime-cover-image.lazy(data-src=anime.ImageLink("large"), data-webp="true", data-color=anime.AverageColor(), alt=anime.Title.ByUser(user))

	h3.episode-view-number= "Episode " + strconv.Itoa(episode.Number)

	//- if episodeIndex > 0
	//- 	a.button(href=anime.Link() + "/episode/" + strconv.Itoa(anime.Episodes().Items[episodeIndex - 1].Number))
	//- 		Icon("chevron-left")

	//- if episodeIndex < len(anime.Episodes().Items) - 1
	//- 	a.button(href=anime.Link() + "/episode/" + strconv.Itoa(anime.Episodes().Items[episodeIndex + 1].Number))
	//- 		Icon("chevron-right")

	if episode.Title.Japanese != ""
		.episode-view-title
			Japanese(episode.Title.Japanese)

	if validate.DateTime(episode.AiringDate.Start)
		p.episode-view-airing-date
			span.utc-airing-date(data-start-date=episode.AiringDate.Start, data-end-date=episode.AiringDate.End, data-episode-number=episode.Number)= episode.AiringDate.StartDateHuman()
	
	if user != nil && user.Location.CountryName != "Japan"
		.buttons
			for serviceName, link := range episode.Links
				a.button(href=link, title="Watch episode " + strconv.Itoa(episode.Number), target="_blank", rel="noopener")
					Icon("eye")
					span= serviceName
			
			//- a.button(href=arn.Nyaa.GetLink(anime, fmt.Sprintf("%02d", episode.Number)), title="Download episode " + strconv.Itoa(episode.Number), target="_blank", rel="noopener")
			//- 	Icon("download")
			//- 	span nyaa.si
		
		.footer
			p Make sure to support the anime you're watching by buying officially released Blu-rays and merchandise.
			p Anime Notifier provides links to external websites for convenience reasons. By clicking on these links you are leaving our site. Thus we can not, under no circumstances, be held responsible for the content on external websites.