component Users(users []*arn.User, url string)
	h1.page-title Users
	UsersTabs(url)

	.user-avatars.mountable
		each user in users
			Avatar(user)

component UsersByCountry(users []*arn.User, countryName string)
	if len(users) == 0
		p.no-data.mountable= "Seems like there are no users in " + stringutils.Capitalize(countryName)
	else
		h1= "Users in " + users[0].Location.CountryName

		.user-avatars.mountable
			each user in users
				Avatar(user)

component ProUsers(users []*arn.User, url string)
	h1.page-title Supporters
	UsersTabs(url)

	.pro-avatars
		each user in users
			a.profile-image-container.mountable(href=user.Link())
				ProfileImage(user)
				.image-title
					.image-title-text= user.Nick
	
	.footer.mountable
		p We are thankful to everyone supporting the site!

component UserLists(groups []*utils.UserList, url string)
	h1.page-title Users
	UsersTabs(url)

	each group in groups
		h3.user-list-name.mountable= group.Name

		.user-avatars
			each user in group.Users
				.mountable
					Avatar(user)

component StaffRecruitment
	.footer.mountable
		p
			a(href="https://github.com/animenotifier/notify.moe#installation", target="_blank", rel="noopener") Interested in contributing code?
			br
			a(href="https://discord.gg/0kimAmMCeXGXuzNF", target="_blank", rel="noopener") Interested in editing data?

component UsersTabs(url string)
	.tabs
		Tab("Active", "users", "/users")
		Tab("Games", "gamepad", "/users/games/osu")
		Tab("Editors", "pencil", "/users/editors")
		Tab("Supporters", "heart", "/users/pro")
		Tab("Staff", "user-secret", "/users/staff")
		//- Tab("Map", "map", "/users/map")
	
	if strings.Contains(url, "/users/games")
		.tabs
			Tab("Osu", "gamepad", "/users/games/osu")
			Tab("Overwatch", "overwatch", "/users/games/overwatch")
			Tab("FFXIV", "gamepad", "/users/games/ffxiv")