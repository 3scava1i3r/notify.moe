component CharacterDetails(character *arn.Character, characterAnime []*arn.Anime, quotes []*arn.Quote, user *arn.User)
	.character-page
		.character-left-column
			.character-header
				.character-image-container
					img.character-image-fullsize(src=character.Image, alt=character.Name)
				.character-description-container
					h1.character-name= character.Name
					.anime-alternative-title
						Japanese("日本語の名前無し")
					.character-description!= markdown.Render(character.Description)
			
					h3 Anime
					.character-anime
						each anime in characterAnime
							a.character-anime-item.ajax(href=anime.Link(), title=anime.Title.ByUser(user))
								img.character-anime-item-image.lazy(data-src=anime.Image("small"), data-webp="true", alt=anime.Title.ByUser(user))
					h3 Quotes
					.character-quotes
						each quote in quotes
							Quote(quote)

		if len(character.Attributes) > 0
			.character-sidebar
				h3 Information
				table.character-attributes
					each attribute in character.Attributes
						tr.mountable(data-mountable-type="info")
							td.character-attributes-name= attribute.Name + ":"

							if strings.Contains(attribute.Value, "<")
								td.character-attributes-value!= markdown.Render(attribute.Value)
							else
								td.character-attributes-value= attribute.Value

